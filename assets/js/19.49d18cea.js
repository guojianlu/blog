(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{284:function(e,t,a){"use strict";a.r(t);var s=a(13),r=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"webpack"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[e._v("#")]),e._v(" Webpack")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://guojianlu.github.io/webpack5-docs/",target:"_blank",rel:"noopener noreferrer"}},[e._v("最新webpack5教程"),t("OutboundLink")],1)])]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/guojianlu/simple-webpack",target:"_blank",rel:"noopener noreferrer"}},[e._v("简易版webpack"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"环境选项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#环境选项"}},[e._v("#")]),e._v(" 环境选项")]),e._v(" "),t("p",[e._v('当 webpack 配置对象导出为一个函数时，可以向起传入一个"环境对象(environment)"。')]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("$ webpack --env.production    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 设置 env.production == true")]),e._v("\n$ webpack --env.platform"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("web  "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# 设置 env.platform == "web"')]),e._v("\n")])])]),t("p",[t("code",[e._v("--env")]),e._v(" 参数具有多种语法")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('$ webpack --env prod        `"prod"`\n$ webpack --env.prod        `{ prod: true }`\n$ webpack --env.prod=1      `{ prod: 1 }`\n$ webpack --env.prod=foo    `{ prod: "foo" }`\n$ webpack --env.prod --env.min `{ prod: true, min: true }`\n')])])]),t("h2",{attrs:{id:"配置选项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置选项"}},[e._v("#")]),e._v(" 配置选项")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("--config")]),e._v(" 配置文件的路径, 默认值webpack.config.js")]),e._v(" "),t("li",[t("code",[e._v("--env")]),e._v(" 当配置文件是一个函数时，会将环境变量传给这个函数")]),e._v(" "),t("li",[t("code",[e._v("--mode")]),e._v(' 用到的模式，"development" 或 "production" 之中的一个')])]),e._v(" "),t("h2",{attrs:{id:"配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[e._v("#")]),e._v(" 配置")]),e._v(" "),t("h3",{attrs:{id:"output"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#output"}},[e._v("#")]),e._v(" output")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("publicPath")]),e._v(" 公司有自己的cdn时，这会相当有用，html文件引入静态资源的时候会在其路径前面加上这个publicPach,这样的话，这些静态资源就可以部署到cdn上(与html不在同一个域下面)")])]),e._v(" "),t("h2",{attrs:{id:"devserver"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#devserver"}},[e._v("#")]),e._v(" devServer")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("after")]),e._v(" 在服务内部的所有其他中间件之后， 提供执行自定义中间件的功能。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("devServer: {\n  after: function(app, server) {\n    // 做些有趣的事\n  }\n}\n")])])]),t("ul",[t("li",[t("code",[e._v("before")]),e._v(" 在服务内部的所有其他中间件之前， 提供执行自定义中间件的功能。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("devServer: {\n  before: function(app, server) {\n    app.get('/some/path', function(req, res) {\n      res.json({ custom: 'response' });\n    });\n  }\n}\n// 此功能可用于提供mock数据\n")])])]),t("ul",[t("li",[t("code",[e._v("headers")]),e._v(" 在所有响应中添加首部内容")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("devServer: {\n  headers: {\n    'X-Custom-Foo': 'bar'\n  }\n}\n")])])]),t("ul",[t("li",[t("code",[e._v("historyApiFallback")]),e._v(" 当使用 HTML5 History API 时，任意的 404 响应都可能需要被替代为 index.html。默认禁用。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("devServer: {\n  historyApiFallback: true\n}\n// 通过传入一个对象，比如使用 rewrites 这个选项，此行为可进一步地控制\ndevServer: {\n  historyApiFallback: {\n    rewrites: [\n      { from: /^\\/$/, to: '/views/landing.html' },\n      { from: /^\\/subpage/, to: '/views/subpage.html' },\n      { from: /./, to: '/views/404.html' }\n    ]\n  }\n}\n")])])]),t("ul",[t("li",[t("code",[e._v("proxy")]),e._v(" API请求转发，dev-server 使用了非常强大的 http-proxy-middleware 包。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// 请求到 /api/users 现在会被代理到请求 http://localhost:3000/api/users。\ndevServer: {\n  proxy: {\n    '/api': 'http://localhost:3000'\n  }\n}\n\n// 如果你不想始终传递 /api ，则需要重写路径\ndevServer: {\n  proxy: {\n    '/api': {\n      target: 'http://localhost:3000',\n      pathRewrite: {'^/api' : ''}\n    }\n  }\n}\n")])])]),t("ul",[t("li",[t("code",[e._v("compress")]),e._v(" 启用 gzip 压缩")]),e._v(" "),t("li",[t("code",[e._v("contentBase")]),e._v(" 告诉服务器从哪个目录中提供内容, 默认情况下，将使用当前工作目录作为提供内容的目录。")]),e._v(" "),t("li",[t("code",[e._v("hot")]),e._v(" 启用 webpack 的模块热替换功能, 必须有 webpack.HotModuleReplacementPlugin 才能完全启用 HMR。(默认情况下，当有内容修改的时候，会刷新整个浏览器，状态将不会被保存。)")]),e._v(" "),t("li",[t("code",[e._v("hotOnly")]),e._v(" 即使HMR没有生效，也不自动刷新浏览器")]),e._v(" "),t("li",[t("code",[e._v("open")]),e._v(" 告诉 dev-server 在 server 启动后打开浏览器。默认禁用。")]),e._v(" "),t("li",[t("code",[e._v("port")]),e._v(" 指定端口")]),e._v(" "),t("li",[t("code",[e._v("performance")]),e._v(" 配置如何展示性能提示。")])]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),t("p",[t("code",[e._v("HMR")]),e._v(" 不支持将css单独抽离成文件的形式"),t("br"),e._v("\n开发模式推荐使用style-loader处理样式文件，将css以style标签的形式插入到head标签里，这样就能正常的HMR了"),t("br"),e._v("\n生成模式推荐使用MiniCssExtranctPlugin.loader来处理样式文件，将css抽离到一个单独的文件里。此时也没必要进行HMR.")])]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),t("p",[t("code",[e._v("HMR")]),e._v(" 原理"),t("br"),e._v("\n每次编译之后会生成xxx.hot-update.json和xxx.hot-update.js文件，对比两次编译之后的.json文件，看是是否有变化，有变化则执行.js文件来进行跟新")])]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),t("p",[e._v("上面配置的HMR对js的支持还不是很友好，所以还需要配合设置模块监听。"),t("br"),e._v("\n各技术栈有自己相应的loader，具体到官方查询配置即可。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('// 原生处理：\nif(module.hot) {\n  module.hot.accept("模块", function() {\n    // 监听到模块发生变化，执行相应的操作\n  });\n}\n')])])]),t("h2",{attrs:{id:"如何写一个loader"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何写一个loader"}},[e._v("#")]),e._v(" 如何写一个Loader")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),t("ul",[t("li",[e._v("loader就是一个函数，不可以是箭头函数(会改变this的指向)")]),e._v(" "),t("li",[e._v("loader接收一份源代码，然后对源代码进行处理之后返回")]),e._v(" "),t("li",[e._v("loader必须有返回，否则会报错")])])]),e._v(" "),t("h3",{attrs:{id:"loader如何接收参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#loader如何接收参数"}},[e._v("#")]),e._v(" loader如何接收参数")]),e._v(" "),t("ul",[t("li",[e._v("this.query\n"),t("ul",[t("li",[e._v("如果这个 loader 配置了 options 对象的话，this.query 就指向这个 option 对象。")]),e._v(" "),t("li",[e._v("如果 loader 中没有 options，而是以 query 字符串作为参数调用时，this.query 就是一个以 ? 开头的字符串。")])])]),e._v(" "),t("li",[e._v("loader-utils")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("module.exports = function(source) {  // source就是源代码\n  return source.replace('world', this.query.name);\n}\n")])])]),t("h3",{attrs:{id:"loader如何返回多个信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#loader如何返回多个信息"}},[e._v("#")]),e._v(" loader如何返回多个信息")]),e._v(" "),t("ul",[t("li",[e._v("this.callback 如何返回多个信息，不止是处理好的源码呢，可以使用this.callback来处理")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// this.callback参数\nthis.callback(\n  err: Error | null,\n  content: string | Buffer,\n  sourceMap?: SourceMap,\n  meta?: any\n);\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("module.exports = function(source) {\n  const result = source.replace('world', this.query.name);\n  this.callback(null, result);\n}\n")])])]),t("h3",{attrs:{id:"loader里如何处理异步事件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#loader里如何处理异步事件"}},[e._v("#")]),e._v(" loader里如何处理异步事件")]),e._v(" "),t("ul",[t("li",[e._v("this.async")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("module.exports = function(source) {\n  // callback 就是 this.callback 注意参数的使⽤\n  const callback = this.async();\n  setTimeout(() => {\n    const result = source.replace('world', this.query.name);\n    callback(null, result);\n  }, 1000);\n}\n")])])]),t("h3",{attrs:{id:"多个loader的使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多个loader的使用"}},[e._v("#")]),e._v(" 多个loader的使⽤")]),e._v(" "),t("ul",[t("li",[e._v("顺序，自右到左")])]),e._v(" "),t("h3",{attrs:{id:"处理loader的路径问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#处理loader的路径问题"}},[e._v("#")]),e._v(" 处理loader的路径问题")]),e._v(" "),t("ul",[t("li",[e._v("默认情况下，使用自己写的loader,需要使用绝对路径")]),e._v(" "),t("li",[e._v("通过resolveLoader配置项来指定loader的查找位置之后，就可以进行简写了")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("resolveLoader: {\n  modules: ['node_modules', './loaders']\n},\nmodule: {\n  rules: [\n    {\n      test: /\\.js$/,\n      use: [\n        'replaceLoader',\n        {\n          loader: 'replaceLoaderAsync',\n          options: {\n            name: 'kobe!!!'\n          }\n        }\n      ]\n    }\n  ]\n}\n")])])]),t("h3",{attrs:{id:"自定义less-loader"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自定义less-loader"}},[e._v("#")]),e._v(" 自定义less-loader")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const less = require('less');\n\nmodule.export = function(source) {\n  less.render(source, (err, output) => {\n    const { css } = output;\n    this.callback(err, css);\n  });\n}\n")])])]),t("h3",{attrs:{id:"自定义css-loader"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自定义css-loader"}},[e._v("#")]),e._v(" 自定义css-loader")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("module.export = function(source) {\n  return JSON.stringify(source);\n}\n")])])]),t("h3",{attrs:{id:"自定义style-loader"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自定义style-loader"}},[e._v("#")]),e._v(" 自定义style-loader")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("module.export = function(source) {\n  return `\n    const tag = document.createElement('style');\n    tag.innerHTML = ${source};\n    document.head.appendChild(tag);\n  `;\n}\n")])])]),t("p",[t("a",{attrs:{href:"https://webpack.js.org/api/loaders",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考:loader API"),t("OutboundLink")],1)]),e._v(" "),t("h2",{attrs:{id:"如何编写一个plugin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何编写一个plugin"}},[e._v("#")]),e._v(" 如何编写一个Plugin")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),t("ul",[t("li",[e._v("开始打包，在某个时刻，帮助我们处理理一些什么事情的机制")]),e._v(" "),t("li",[e._v("plugin是一个类，⾥面包含一个apply函数，接受一个参数， compiler")]),e._v(" "),t("li",[e._v("compiler通过hooks暴露出很多钩子")]),e._v(" "),t("li",[e._v("钩子分为同步钩子和异步钩子")]),e._v(" "),t("li",[e._v("同步钩子通过tap调用，异步钩子通过tapAsync调用")])])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://webpack.js.org/contribute/writing-a-plugin/",target:"_blank",rel:"noopener noreferrer"}},[e._v("官⽅文档"),t("OutboundLink")],1),e._v(" "),t("br"),e._v(" "),t("a",{attrs:{href:"https://webpack.js.org/api/compiler-hooks",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考:compiler-hooks"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("简单案例")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("class CopyrightWebpackPlugin {\n  constructor(options) {\n    this.options = options;\n    console.log(options);\n  }\n  apply(compiler) {\n    // 同步钩子\n    compiler.hooks.compile.tap('CopyrightWebpackPlugin', (compilation) => {\n      console.log('执行了');\n    })\n\n    // 异步钩子\n    // compilation里包含打包过程的的资源和代码\n    compiler.hooks.emit.tapAsync('CopyrightWebpackPlugin', (compilation, cb) => {\n      // assets资源列表对象\n      compilation.assets['copyright.txt'] = {\n        // 定义资源内容\n        source: function() {\n          return 'hello plugin';\n        },\n        // 定义资源的大小\n        size: function() {\n          return 20;\n        }\n      };\n      cb();  // 不要忘记cb的调用\n    })\n  }\n}\n\nmodule.exports = CopyrightWebpackPlugin;\n")])])]),t("h2",{attrs:{id:"多入口打包配置通用方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多入口打包配置通用方案"}},[e._v("#")]),e._v(" 多⼊口打包配置通⽤方案")]),e._v(" "),t("p",[e._v("1、调整目录结构")]),e._v(" "),t("ul",[t("li",[e._v("src\n"),t("ul",[t("li",[e._v("index\n"),t("ul",[t("li",[e._v("index.js")]),e._v(" "),t("li",[e._v("index.html")])])]),e._v(" "),t("li",[e._v("list\n"),t("ul",[t("li",[e._v("index.js")]),e._v(" "),t("li",[e._v("index.html")])])]),e._v(" "),t("li",[e._v("detail\n"),t("ul",[t("li",[e._v("index.js")]),e._v(" "),t("li",[e._v("index.html")])])])])])]),e._v(" "),t("p",[e._v("2、配置方案")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const setMPA = () => {\n  const entry = {};\n  const htmlWebpackPlugins = [];\n  const entryFiles = glob.sync(path.join(__dirname, './src/*/index.js'));\n  entryFiles.map(entryFile => {\n    const match = entryFile.match(/src\\/(.*)\\/index\\.js$/);\n    const pageName = match && match[1];\n    entry[pageName] = entryFile;\n    htmlWebpackPlugins.push(\n      new htmlWebpackPlugin({\n        title: pageName,\n        template: path.join(__dirname, `src/${pageName}/index.html`),\n        filename: `${pageName}.html`,\n        chunks: [pageName],\n        inject: true\n      })\n    );\n  });\n  \n  return { entry, htmlWebpackPlugins };\n};\n")])])]),t("p",[e._v("3、配置文件")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const { entry, htmlWebpackPlugins } = setMPA();\nmodule.exports = {\n  entry,\n  mode: 'development',\n  output: {\n    path: path.resolve(__dirname, './dist'),\n    filename: '[name].js'\n  },\n  plugins: [\n    ...htmlWebpackPlugins\n  ]\n};\n")])])]),t("p",[e._v("[plugin|loader|mpa]")]),e._v(" "),t("h2",{attrs:{id:"优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优化"}},[e._v("#")]),e._v(" 优化")]),e._v(" "),t("p",[e._v("1、在生产环境中，使用TerserPlugin压缩JS比UglifyJsPlugin的效果更好，时间更短。"),t("br"),e._v("\n2、在webpack的最新版本中(4.41.*)，可以使用hard-source-webpack-plugin来代替        webpack.DllPlugin。优化效果比webpack.DllPlugin更加明显，打包时间缩短将近70~80%。"),t("br"),e._v("\n3、Happyhack与mini-css-extrect-webpack-plugin一起是用会报错，有问题，所以推荐在开发环境使用Happypack，与style-loader一起使用。Happyhack在较小的项目中使用，优化效果不是很明显，打包时间反而会增加。\n4、在项目工程下面新建一个 "),t("code",[e._v(".npmrc")]),e._v(" 的文件，写入 registry=https://registry.npm.taobao.org/ 。修改npm包的下载源，加速依赖安装的速度。")])])}),[],!1,null,null,null);t.default=r.exports}}]);